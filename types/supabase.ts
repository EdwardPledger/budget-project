/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/budget_row": {
    get: {
      parameters: {
        query: {
          budget_row_id?: parameters["rowFilter.budget_row.budget_row_id"];
          name?: parameters["rowFilter.budget_row.name"];
          amount?: parameters["rowFilter.budget_row.amount"];
          spent?: parameters["rowFilter.budget_row.spent"];
          inserted_at?: parameters["rowFilter.budget_row.inserted_at"];
          updated_at?: parameters["rowFilter.budget_row.updated_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["budget_row"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** budget_row */
          budget_row?: definitions["budget_row"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          budget_row_id?: parameters["rowFilter.budget_row.budget_row_id"];
          name?: parameters["rowFilter.budget_row.name"];
          amount?: parameters["rowFilter.budget_row.amount"];
          spent?: parameters["rowFilter.budget_row.spent"];
          inserted_at?: parameters["rowFilter.budget_row.inserted_at"];
          updated_at?: parameters["rowFilter.budget_row.updated_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          budget_row_id?: parameters["rowFilter.budget_row.budget_row_id"];
          name?: parameters["rowFilter.budget_row.name"];
          amount?: parameters["rowFilter.budget_row.amount"];
          spent?: parameters["rowFilter.budget_row.spent"];
          inserted_at?: parameters["rowFilter.budget_row.inserted_at"];
          updated_at?: parameters["rowFilter.budget_row.updated_at"];
        };
        body: {
          /** budget_row */
          budget_row?: definitions["budget_row"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  budget_row: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    budget_row_id: number;
    /** Format: text */
    name?: string;
    /** Format: integer */
    amount?: number;
    /** Format: integer */
    spent?: number;
    /**
     * Format: timestamp with time zone
     * @default timezone('utc'::text, now())
     */
    inserted_at: string;
    /**
     * Format: timestamp with time zone
     * @default timezone('utc'::text, now())
     */
    updated_at: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description budget_row */
  "body.budget_row": definitions["budget_row"];
  /** Format: bigint */
  "rowFilter.budget_row.budget_row_id": string;
  /** Format: text */
  "rowFilter.budget_row.name": string;
  /** Format: integer */
  "rowFilter.budget_row.amount": string;
  /** Format: integer */
  "rowFilter.budget_row.spent": string;
  /** Format: timestamp with time zone */
  "rowFilter.budget_row.inserted_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.budget_row.updated_at": string;
}

export interface operations {}

export interface external {}
